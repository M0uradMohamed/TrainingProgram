@model IEnumerable<Models.Instructor>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>
<div class="row col-12">

    <form asp-action="index" id="searchForm">

        <input type="hidden" name="Page" id="pageInput" value="@ViewBag.Pages.page" />

        <div class="form-group col-2">
            <label class="control-label">البحث</label>
            <input name="Search" class="form-control" value="@ViewBag.Search" />
        </div>
        <div class="row col-4 mt-2 mb-2">
            <div class="col-1 ms-4">
            <input type="submit" value="search" class="btn btn-primary" />
            </div>
            <div class="col-1 me-4">
            <a type="button" asp-action="index" class="btn btn-danger "> reset</a>
            </div>
        </div>
    </form>
</div>

<div class="table-container">
    <table class="table table-striped table-bordered text-nowrap">
        <thead class="bg-primary text-white">
            <tr>
                <th>#</th>
                <th>@Html.DisplayNameFor(model => model.FoundationId)</th>
                <th>@Html.DisplayNameFor(model => model.Name)</th>
                <th>@Html.DisplayNameFor(model => model.BirthDate)</th>
                <th>@Html.DisplayNameFor(model => model.HiringDate)</th>
                <th>@Html.DisplayNameFor(model => model.Department)</th>
                <th>@Html.DisplayNameFor(model => model.WorkPlace)</th>
                <th>@Html.DisplayNameFor(model => model.Major)</th>
                <th>@Html.DisplayNameFor(model => model.GraduationeDate)</th>
                <th>@Html.DisplayNameFor(model => model.AcademicDegree)</th>
                <th>@Html.DisplayNameFor(model => model.AcademicDegreeeDate)</th>
                <th>@Html.DisplayNameFor(model => model.PhoneNumber)</th>
                <th>@Html.DisplayNameFor(model => model.OtherPhoneNumber)</th>
                <th>@Html.DisplayNameFor(model => model.Email)</th>
                <th>@Html.DisplayNameFor(model => model.Degree)</th>
                <th>@Html.DisplayNameFor(model => model.Sector)</th>
                <th>@Html.DisplayNameFor(model => model.Status)</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @{
                int index = (ViewBag.Pages.page * 20) - 19;
            }
            @foreach (var item in Model)
            {
                <tr>
                    <td>@index</td>
                    <td>@Html.DisplayFor(modelItem => item.FoundationId)</td>
                    <td>@Html.DisplayFor(modelItem => item.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.BirthDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.HiringDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.Department)</td>
                    <td>@Html.DisplayFor(modelItem => item.WorkPlace)</td>
                    <td>@Html.DisplayFor(modelItem => item.Major)</td>
                    <td>@Html.DisplayFor(modelItem => item.GraduationeDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.AcademicDegree)</td>
                    <td>@Html.DisplayFor(modelItem => item.AcademicDegreeeDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.PhoneNumber)</td>
                    <td>@Html.DisplayFor(modelItem => item.OtherPhoneNumber)</td>
                    <td>@Html.DisplayFor(modelItem => item.Email)</td>
                    <td>@Html.DisplayFor(modelItem => item.Degree!.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.Sector!.Name)</td>
                    <td>
                        @if (item.Status != null)
                        {
                            @if (item.Status == false)
                            {
                                <span>غير معتمد</span>
                            }
                            else
                            {
                                <span>معتمد</span>
                            }
                        }
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-dark">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info">Details</a>
                        <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal" data-instructorid="@item.Id">
                            Delete
                        </button>
                        <a asp-action="Courses" asp-route-id="@item.Id" class="btn btn-success">الدورات</a>
                    </td>
                </tr>
                index++;
            }
        </tbody>
    </table>
</div>

<div class="mt-2">

    @{
        if (Model.Count() != 0)
        {
            <div style="display: flex; justify-content: center;">
                <nav aria-label="Page navigation example">
                    <ul class="pagination" style="display: flex; justify-content: center; align-items: center;">
                        <!-- Previous Button -->
                        <li class="page-item @(ViewBag.Pages.page == 1 ? "disabled" : "")">
                            <a href="#" class="page-link" onclick="changePage(@(ViewBag.Pages.page - 1))">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>

                        <!-- Page Numbers -->
                        @if (ViewBag.Pages.totalPages > 0)
                        {
                            int currentPage = ViewBag.Pages.page;
                            int totalPages = (int)ViewBag.Pages.totalPages;

                            int startPage = Math.Max(1, currentPage - 1);
                            int endPage = Math.Min(totalPages, startPage + 2);

                            if (endPage - startPage < 2)
                            {
                                startPage = Math.Max(1, endPage - 2);
                            }

                            for (int i = startPage; i <= endPage; i++)
                            {
                                <li class="page-item @(i == currentPage ? "active" : "")">
                                    <a href="#" class="page-link" onclick="changePage(@i)">@i</a>
                                </li>
                            }
                        }

                        <!-- Next Button -->
                        <li class="page-item @(ViewBag.Pages.page == ViewBag.Pages.totalPages ? "disabled" : "")">
                            <a href="#" class="page-link" onclick="changePage(@(ViewBag.Pages.page + 1))">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        }
    }
</div>

<!-- Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this instructor ?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteForm" method="post" action="/manage/instructor/delete/">
                    <input type="hidden" name="id" id="instructorIdInput" value="" />
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    var deleteModal = document.getElementById('deleteModal');
    deleteModal.addEventListener('show.bs.modal', function (event) {
        var button = event.relatedTarget;
        var id = button.getAttribute('data-instructorid');
        var input = document.getElementById('instructorIdInput');
        input.value = id;
    });
</script>
<script>
    function changePage(pageNumber) {
        var totalPages = @ViewBag.Pages.totalPages;
        if (pageNumber < 1 || pageNumber > totalPages) return;

        document.getElementById("pageInput").value = pageNumber;
        document.getElementById("searchForm").submit();
    }
</script>
<style>
    .table-container {
        max-height: 400px; /* التحكم في ارتفاع الجدول */
        overflow-y: auto; /* تفعيل التمرير العمودي */
        border: 2px solid black; /* حدود واضحة للجدول */
        position: relative;
    }

    .table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0; /* إزالة الفراغات بين الحدود */
    }

        .table thead {
            position: sticky;
            top: 0;
            color: white;
            z-index: 2;
        }

        .table th {
            text-align: left;
            padding: 10px;
            border: 2px solid black; /* حدود ثابتة للهيدر */
            border-bottom: 2px solid black !important; /* تأكيد ثبات الحد السفلي */
        }

        .table tbody td {
            border: 2px solid black; /* تأكيد ظهور الحدود داخل الجدول */
        }

</style>