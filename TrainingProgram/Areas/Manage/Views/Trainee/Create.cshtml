@model Models.ViewModels.TraineeVM

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@if (TempData["success"] != null)
{
    <div id="successToast" class="toast">
        <strong>@TempData["success"]</strong>
    </div>
}
@if (TempData["success"] != null)
{
    <div id="boughtToast" class="toastorange">
        <h1>@TempData["success"]</h1>
    </div>
}

<h1>Create</h1>

<h4>Trainee</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" asp-route-id="@ViewBag.CourseId" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input hidden value="ViewBag.CourseId" />
            </div>
            <div class="form-group">
                <label asp-for="EmployeeId" class="control-label">الموظف</label>
                <select asp-for="EmployeeId" id="select-Employee" autocomplete="off" placeholder=" اسم المتدرب | رقم المؤسسة | الوظيفة | مكان العمل">
                    <option value=""> none</option>
                    @foreach (var item in ViewBag.Employees)
                    {
                        <option value="@item.Id">   @item.Name | @item.FoundationId | @(item.Job ?? "لا يوجد")  | @(item.WorkPlace ?? "لا يوجد")   </option>
                    }
                </select>
                <span asp-validation-for="EmployeeId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Notes" class="control-label"></label>
                <textarea asp-for="Notes" class="form-control" id="textAreaExample1" rows="4" wrap="hard"></textarea>
                <span asp-validation-for="Notes" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="SecondNotes" class="control-label"></label>
                <textarea asp-for="SecondNotes" class="form-control" id="textAreaExample1" rows="4" wrap="hard"></textarea>
                <span asp-validation-for="SecondNotes" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="File" class="control-label"></label>
                <input  name="file" class="form-control" type="file" />
                <span asp-validation-for="File" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="AbsenceDays" class="control-label"></label>
                <input asp-for="AbsenceDays" class="form-control" placeholder="0" />
                <span asp-validation-for="AbsenceDays" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="AttendanceAndDeparture" class="control-label"></label>
                <input asp-for="AttendanceAndDeparture" class="form-control" placeholder="0" />
                <span asp-validation-for="AttendanceAndDeparture" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="AdherenceMark" class="control-label"></label>
                <input asp-for="AdherenceMark" class="form-control" min="0" placeholder="0" />
                <span asp-validation-for="AdherenceMark" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="InteractionMark" class="control-label"></label>
                <input asp-for="InteractionMark" class="form-control" placeholder="0" />
                <span asp-validation-for="InteractionMark" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ActivitiesMark" class="control-label"></label>
                <input asp-for="ActivitiesMark" class="form-control" placeholder="0" />
                <span asp-validation-for="ActivitiesMark" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TotalEvaluation" class="control-label"></label>
                <input id="TotalEvaluationText" class="form-control" type="number"  disabled />
                <input id="TotalEvaluation" name="TotalEvaluation" type="hidden" />
                <span asp-validation-for="TotalEvaluation" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="WrittenExam" class="control-label"></label>
                <input asp-for="WrittenExam" class="form-control" placeholder="0" />
                <span asp-validation-for="WrittenExam" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TotalMarks" class="control-label"></label>
                <input id="TotalMarksText" class="form-control" type="number"  disabled />
                <input id="TotalMarks" name="TotalMarks" type="hidden" />
                <span asp-validation-for="TotalMarks" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Estimate" class="control-label"></label>
                <input id="EstimateText" class="form-control" type="text" disabled />
                <input id="EstimateHidden" name="Estimate" type="hidden" />
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="course" asp-route-id="@ViewBag.CourseId">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
<script>
    new TomSelect("#select-Employee", { create: false, sortField: { field: "text", direction: "asc" }, maxOptions: false });
</script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const estimateDictionary = {
            "Excellent": "ممتاز",
            "VeryGood": "جيد جدا",
            "Good": "جيد",
            "Acceptable": "مقبول",
            "Failed": "راسب"
        };

        function calculateTotals() {
            let adherence = parseInt(document.getElementById("AdherenceMark").value) || 0;
            let interaction = parseInt(document.getElementById("InteractionMark").value) || 0;
            let activities = parseInt(document.getElementById("ActivitiesMark").value) || 0;
            let writtenExam = parseFloat(document.getElementById("WrittenExam").value) || 0;
            let attendance = parseInt(document.getElementById("AttendanceAndDeparture").value) || 0;

            // حساب TotalEvaluation
            let totalEvaluation = adherence + interaction + activities;
            document.getElementById("TotalEvaluationText").value = totalEvaluation;
            document.getElementById("TotalEvaluation").value = totalEvaluation; // تحديث الحقل المخفي

            // حساب TotalMarks
            let totalMarks = totalEvaluation + writtenExam + attendance;
            document.getElementById("TotalMarksText").value = totalMarks;
            document.getElementById("TotalMarks").value = totalMarks; // تحديث الحقل المخفي

            // تحديد التقدير
            let estimateKey = "Failed";
            if (totalMarks >= 90) estimateKey = "Excellent";
            else if (totalMarks >= 75) estimateKey = "VeryGood";
            else if (totalMarks >= 65) estimateKey = "Good";
            else if (totalMarks >= 60) estimateKey = "Acceptable";

            document.getElementById("EstimateText").value = estimateDictionary[estimateKey];
            document.getElementById("EstimateHidden").value = estimateKey; // تحديث الحقل المخفي
        }

        // ربط الأحداث لضمان التحديث الفوري عند التغيير
        let inputFields = ["AdherenceMark", "InteractionMark", "ActivitiesMark", "WrittenExam", "AttendanceAndDeparture"];
        inputFields.forEach(id => {
            document.getElementById(id).addEventListener("input", calculateTotals);
        });

        // تشغيل الحساب عند تحميل الصفحة
        calculateTotals();
    });
</script>

