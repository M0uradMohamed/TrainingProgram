@using Models.StaticData
@model IEnumerable<Models.ViewModels.TraineeEmployeeCourseVM>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>
<div class="row mb-2">
    <form asp-action="index" id="searchForm" class="d-flex flex-wrap align-items-end gap-2">
        <div class="form-group">
            <label class="form-label">برنامج</label>
            <input type="text" name="CourseName" value="@ViewBag.Search.CourseName" class="form-control" />
        </div>
        <div class="form-group">
            <label class="form-label">رقم المؤسسة</label>
            <input type="text" name="EmployeeNumber" value="@ViewBag.Search.EmployeeNumber" class="form-control" />
        </div>
        <div class="form-group">
            <label name="Estimate" class="form-label">تقدير</label>
            <select class="form-select" name="Estimate">
                    @{

                    if (ViewBag.Search.Estimate == null)
                        {
                            <option value="" selected>غير محدد</option>
                        }
                        else
                        {
                            <option value="">غير محدد</option>
                        }
                    foreach (var item in ViewBag.Estimate)
                        {
                        if (ViewBag.Search.Estimate == item.Key)
                            {
                                <option value="@item.Key" selected>@item.Value</option>
                            }
                            else
                            {
                                <option value="@item.Key">@item.Value</option>
                            }

                        }
                    }
                </select>
        </div>

        <input type="hidden" name="Page" id="pageInput" value="@ViewBag.Pages.page" />

        <div class="col-auto">
            <input type="submit" value="search" class="btn btn-primary" />
        </div>
        <div class="col-auto">
            <a asp-action="index" class="btn btn-danger">reset</a>
        </div>
    </form>
</div>



<table class="table table-striped table-bordered text-nowrap">
    <thead class="bg-primary text-white" style="background-color:#5D7B9D  ">
        <tr>
            <th>#</th>
            <th>
                @Html.DisplayNameFor(model => model.FoundationId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EmployeeName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Job)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Department)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SectorName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.WorkPlace)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CourseName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BeginningDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndingDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TotalMarks)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @{
            int index = (ViewBag.Pages.page * 50) - 49;
        }
        @foreach (var item in Model)
        {
            <tr>
                <td>@index</td>
                <td>
                    @Html.DisplayFor(modelItem => item.FoundationId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EmployeeName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Job)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Department)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SectorName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.WorkPlace)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.CourseName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BeginningDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndingDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalMarks)
                </td>
                <td>
                    <a asp-action="course" asp-controller="trainee" asp-route-id="@item.CourseId" type="button" class="btn btn-info ">Details</a>
                </td>
            </tr>
            index++;
        }
    </tbody>
</table>
<div class="mt-2">
    @{
        if (Model.Count() != 0)
        {
            <div style="display: flex; justify-content: center;">
                <nav aria-label="Page navigation example">
                    <ul class="pagination" style="display: flex; justify-content: center; align-items: center;">
                        <!-- First Button -->
                        <li class="page-item @(ViewBag.Pages.page == 1 ? "disabled" : "")">
                            <a href="#" class="page-link" onclick="changePage(1)">
                                First
                            </a>
                        </li>

                        <!-- Previous Button -->
                        <li class="page-item @(ViewBag.Pages.page == 1 ? "disabled" : "")">
                            <a href="#" class="page-link" onclick="changePage(@(ViewBag.Pages.page - 1))">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>

                        <!-- Page Numbers -->
                        @if (ViewBag.Pages.totalPages > 0)
                        {
                            int currentPage = ViewBag.Pages.page;
                            int totalPages = (int)ViewBag.Pages.totalPages;

                            int startPage = Math.Max(1, currentPage - 1);
                            int endPage = Math.Min(totalPages, startPage + 2);

                            if (endPage - startPage < 2)
                            {
                                startPage = Math.Max(1, endPage - 2);
                            }

                            for (int i = startPage; i <= endPage; i++)
                            {
                                <li class="page-item @(i == currentPage ? "active" : "")">
                                    <a href="#" class="page-link" onclick="changePage(@i)">@i</a>
                                </li>
                            }
                        }

                        <!-- Next Button -->
                        <li class="page-item @(ViewBag.Pages.page == ViewBag.Pages.totalPages ? "disabled" : "")">
                            <a href="#" class="page-link" onclick="changePage(@(ViewBag.Pages.page + 1))">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>

                        <!-- Last Button -->
                        <li class="page-item @(ViewBag.Pages.page == ViewBag.Pages.totalPages ? "disabled" : "")">
                            <a href="#" class="page-link" onclick="changePage(@ViewBag.Pages.totalPages)">
                                Last
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        }
    }
</div>

<script>
    function changePage(pageNumber) {
        var totalPages = @ViewBag.Pages.totalPages;
        if (pageNumber < 1 || pageNumber > totalPages) return;

        document.getElementById("pageInput").value = pageNumber;
        document.getElementById("searchForm").submit();
    }
</script>
