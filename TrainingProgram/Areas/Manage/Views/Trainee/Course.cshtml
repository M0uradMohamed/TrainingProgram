@using Models.StaticData
 @model IEnumerable<Models.ViewModels.TraineeVM>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Course</h1>
<a asp-action="print" asp-route-id="@ViewBag.Course.Id" class="btn btn-success" target="_blank"> Print Report</a>


<div>

    <dl class="row">
        <dt class="col-sm-2">
            اسم البرنامج :
        </dt>
        <dd class="col-sm-10">
            @ViewBag.Course.Name
        </dd>
        <dt class="col-sm-2">
            تاريخ البداية :
        </dt>
        <dd class="col-sm-10">
            @ViewBag.Course.BeginningDate
        </dd>
        <dt class="col-sm-2">
            تاريخ النهاية :
        </dt>
        <dd class="col-sm-10">
            @ViewBag.Course.EndingDate
        </dd>
        <dt class="col-sm-2">
            المدرب الاساسي :
        </dt>
        <dd class="col-sm-10">
        </dd>
        <dt class="col-sm-2">
            مكان التنفيذ :
        </dt>
        <dd class="col-sm-10">
            @ViewBag.Course.ImplementationPlace
        </dd>
    </dl>
</div>

<p>
    <a asp-action="Create" asp-route-id="@ViewBag.Course.Id" class="btn btn-primary">Create New</a>
</p>
<div class="table-container">
    <table class="table table-striped table-bordered text-nowrap">
        <thead class="bg-primary text-white" style="background-color:#5D7B9D  ">
            <tr>
                <th>#</th>
                <th>
                    @Html.DisplayNameFor(model => model.EmployeeFoundationId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EmployeeName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Job)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.WorkPlace)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.AbsenceDays)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.AttendanceAndDeparture)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.AdherenceMark)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.InteractionMark)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ActivitiesMark)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TotalEvaluation)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.WrittenExam)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TotalMarks)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Estimate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Notes)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SecondNotes)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.File)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @{
                int index = (ViewBag.Pages.page * 5) - 4;
            }
            @foreach (var item in Model)
            {
                <tr>
                    <td>@index</td>
                    <td>
                        @item.EmployeeFoundationId
                    </td>
                    <td>
                        @item.EmployeeName
                    </td>
                    <td>
                        @item.Job
                    </td>
                    <td>
                        @item.WorkPlace
                    </td>
                    <td>
                        @item.AbsenceDays
                    </td>
                    <td>
                        @item.AttendanceAndDeparture
                    </td>
                    <td>
                        @item.AdherenceMark
                    </td>
                    <td>
                        @item.InteractionMark
                    </td>
                    <td>
                        @item.ActivitiesMark
                    </td>
                    <td>
                        @item.TotalEvaluation
                    </td>
                    <td>
                        @item.WrittenExam
                    </td>
                    <td>
                        @item.TotalMarks
                    </td>
                    <td>
                        @{
                            if (item.Estimate.HasValue)
                            {

                                @StaticData.estimate[item.Estimate.Value]
                            }

                        }
                    </td>
                    <td>
                        @{
                            if (item.Notes != null)
                            {
                                @foreach (var note in item.Notes!.Split("\n"))
                                {
                                    <p>@note</p>
                                }
                            }
                        }
                    </td>
                    <td>
                        @{
                            if (item.SecondNotes != null)
                            {
                                @foreach (var note in item.SecondNotes!.Split("\n"))
                                {
                                    <p>@note</p>
                                }
                            }
                        }
                    </td>
                    <td>
                        @{
                            if (item.File != null)
                            {

                                <a href="@Url.Action("DownloadFile", "trainee", new { fileName = item.File , id = @ViewBag.Course.Id})" class="btn btn-primary">
                                    <i class="bi bi-download"></i>
                                </a>
                            }
                        }
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@ViewBag.Course.Id" asp-route-EmployeeId="@item.EmployeeId" type="button" class="btn btn-dark">Edit</a>
                        <a asp-action="Details" asp-route-id="@ViewBag.Course.Id" asp-route-EmployeeId="@item.EmployeeId" type="button" class="btn btn-info ">Details</a>
                        <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal"
                                data-courseid="@ViewBag.Course.Id" data-employeeid="@item.EmployeeId">
                            Delete
                        </button>
                    </td>
                </tr>
                index++;
            }
        </tbody>
    </table>
</div>

<div class="mt-2">
    @{
        if (Model.Count() != 0)
        {
            <div style="display: flex; justify-content: center;">
                <nav aria-label="Page navigation example">
                    <ul class="pagination" style="display: flex; justify-content: center; align-items: center;">
                        <!-- First Button -->
                        <li class="page-item @(ViewBag.Pages.page == 1 ? "disabled" : "")">
                            <a href="#" class="page-link" onclick="changePage(1)">
                                First
                            </a>
                        </li>

                        <!-- Previous Button -->
                        <li class="page-item @(ViewBag.Pages.page == 1 ? "disabled" : "")">
                            <a href="#" class="page-link" onclick="changePage(@(ViewBag.Pages.page - 1))">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>

                        <!-- Page Numbers -->
                        @if (ViewBag.Pages.totalPages > 0)
                        {
                            int currentPage = ViewBag.Pages.page;
                            int totalPages = (int)ViewBag.Pages.totalPages;

                            int startPage = Math.Max(1, currentPage - 1);
                            int endPage = Math.Min(totalPages, startPage + 2);

                            if (endPage - startPage < 2)
                            {
                                startPage = Math.Max(1, endPage - 2);
                            }

                            for (int i = startPage; i <= endPage; i++)
                            {
                                <li class="page-item @(i == currentPage ? "active" : "")">
                                    <a href="#" class="page-link" onclick="changePage(@i)">@i</a>
                                </li>
                            }
                        }

                        <!-- Next Button -->
                        <li class="page-item @(ViewBag.Pages.page == ViewBag.Pages.totalPages ? "disabled" : "")">
                            <a href="#" class="page-link" onclick="changePage(@(ViewBag.Pages.page + 1))">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>

                        <!-- Last Button -->
                        <li class="page-item @(ViewBag.Pages.page == ViewBag.Pages.totalPages ? "disabled" : "")">
                            <a href="#" class="page-link" onclick="changePage(@ViewBag.Pages.totalPages)">
                                Last
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        }
    }
</div>
<!-- Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this trainee?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteForm" method="post" asp-action="Delete"
                      asp-route-id="@ViewBag.Course.Id" asp-route-EmployeeId="">
                    <input type="hidden" name="EmployeeId" id="employeeIdInput" value="" />
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var deleteModal = document.getElementById('deleteModal');
        deleteModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            var employeeId = button.getAttribute('data-employeeid');
            var input = document.getElementById('employeeIdInput');
            input.value = employeeId;
        });
    });
</script>
<script>
    function changePage(pageNumber) {
        var totalPages = @ViewBag.Pages.totalPages;
        if (pageNumber < 1 || pageNumber > totalPages) return;

        document.getElementById("pageInput").value = pageNumber;
        document.getElementById("searchForm").submit();
    }
</script>
<style>
    .table-container {
        max-height: 750px; /* التحكم في ارتفاع الجدول */
        overflow-y: auto; /* تفعيل التمرير العمودي */
        border: 2px solid black; /* حدود واضحة للجدول */
        position: relative;
    }

    .table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0; /* إزالة الفراغات بين الحدود */
    }

        .table thead {
            position: sticky;
            top: 0;
            color: white;
            z-index: 2;
        }

        .table th {
            padding: 10px;
            border: 2px solid black; /* حدود ثابتة للهيدر */
            border-bottom: 2px solid black !important; /* تأكيد ثبات الحد السفلي */
        }

        .table tbody td {
            border: 2px solid black; /* تأكيد ظهور الحدود داخل الجدول */
        }

</style>
